const router = require('express').Router();
const {{entity}}Service = require('../services/{{entity}}Service');
const { generateLocationUri } = require('../utils');
const STATUS_CODE = require('../utils/statusCode');

router.post('/', async (request, response) => {
  try {
    const id = await {{entity}}Service.save(request.body);

    return response
      .header('Location', generateLocationUri(request, id))
      .status(STATUS_CODE.CREATED)
      .end();
  } catch (error) {
    return response
      .status(STATUS_CODE.INTERNAL_SERVER_ERROR)
      .json({message: error.message});
  }
});

router.get('/', async (request, response) => {
  try {
    const data = await {{entity}}Service.getAll(request.query.offset, request.query.limit);
    if (!data || data.length === 0) {
      return response
        .status(STATUS_CODE.NO_CONTENT)
        .end();
    }
    return response
      .status(STATUS_CODE.OK)
      .json(data);
  } catch (error) {
    return response
      .status(STATUS_CODE.INTERNAL_SERVER_ERROR)
      .json({message: error.message});
  }
});

router.get('/:id', async (request, response) => {
  {{entity}}Service.get(request.params.id)
    .then(data => {
      response
        .status(STATUS_CODE.OK)
        .json(data);
    })
    .catch(error => {
      response
        .status(STATUS_CODE.INTERNAL_SERVER_ERROR)
        .json({message: error.message});
    });
});

router.delete('/:id', async (request, response) => {
  {{entity}}Service.delete(request.params.id)
    .then(() => {
      response
        .status(STATUS_CODE.NO_CONTENT)
        .end();
    })
    .catch(error => {
      response
        .status(STATUS_CODE.INTERNAL_SERVER_ERROR)
        .json({message: error.message});
    });
});

router.put('/:id', async (request, response) => {
  {{entity}}Service.update(request.params.id, request.body)
    .then(data => {
      response
        .status(STATUS_CODE.OK)
        .json(data);
    })
    .catch(error => {
      response
        .status(STATUS_CODE.INTERNAL_SERVER_ERROR)
        .json({message: error.message});
    });
});

module.exports = router;
